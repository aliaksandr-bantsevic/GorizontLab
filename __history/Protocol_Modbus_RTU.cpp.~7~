//---------------------------------------------------------------------------

#pragma hdrstop

#include "Protocol_Modbus_RTU.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)


void TProtocol_Modbus_RTU::setProtocol(void)
{
   protocol_type = PROTOCOL_TYPE_MODBUS_RTU;
}

int TProtocol_Modbus_RTU::request_curr_XY(BYTE addr, BYTE* buf, int* idx, int *exp_response_len, bool* exp_response_regular)
{
	//expectedf response len is regular 22 bytes
	*exp_response_len = 13;
	*exp_response_regular = true;

	modbus_rtu_cmd cmd;
	cmd.addr = addr;
	cmd.fc = RTU_CMD_Read_Input_Registers;
	cmd.start_reg_addr = 0;
	cmd.numb_regs = 4;

	return request_modbus_rtu (cmd, buf, idx);
}

int TProtocol_Modbus_RTU::accept_response_curr_XY(BYTE addr, BYTE* buf, int* idx)
{

	BYTE bb[100];

	memcpy(bb, buf, 100);

	return -1;
}
