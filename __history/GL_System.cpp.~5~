//---------------------------------------------------------------------------

#pragma hdrstop

#include "GL_System.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)


TGLSystem::TGLSystem()
{
   name = L"GorizontLab Monitoring System";
}

TGLSystem::~TGLSystem()
{

}

int TGLSystem::add_object(TGLObject* obj)
{
	objects_list.push_back(obj);

	return 0;
}

TGLObject* TGLSystem::find_object(WideString& nm)
{
	TGLObject* obj = NULL;

	WideString name = nm;

	auto ff = [&name](const TGLObject* ob)
	{
		return ob->name == name;
	};

	std::list<TGLObject*>::iterator it;

	for (it = objects_list.begin(); it != objects_list.end(); ++it)
	{
		 if (ff(*it))
		 {
			   obj = *it;
			   break;
		 }
	}

	return obj;
 }


