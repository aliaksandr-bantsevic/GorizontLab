//---------------------------------------------------------------------------

#ifndef Protocol_211H
#define Protocol_211H
//---------------------------------------------------------------------------
#include "Protocol.h"

#define PACKET_START 0x7E       //разделитель пакетов
#define PACKET_END   0x7E       //разделитель пакетов
#define ESCAPE_BYTE  0x7D       //escape байт
#define CODE7D_BYTE  0x5D       //0x7D код байт
#define CODE7E_BYTE  0x5E       //0x7E код байт

#define PACKETBUF_LEN 1024

typedef enum {

MEAS_VAL=0x01,        //показания измерителя
MEAS_VER=0x0E,        //Версия измерителя
PACK_ERR=0xFF         //сообщение об ошибке

} main_packet_211_id;

typedef enum {

MAIN_PR_211=0x9B,     //основные протоколы 2.11
ADDN_PR_211=0x9C,     //дополнительныепротоколы 2.11
PACK_PR_210=0x9A,     //дополнительныепротоколы 2.10
PACK_PR_NVM=0x9D      //дополнительныепротоколы запись в NVM

} protocol_211_id;

class TProtocol_211 : public TProtocol
{

	void setProtocol(void) override;
	int request_curr_XY(BYTE addr) override;
	int accept_response_curr_XY(BYTE addr) override;

	private:

	void TProtocol_211::RequestMainMeterPacket(unsigned char addr, main_packet_211_id packet);
	int TProtocol_211::EscapeBytesEncode(unsigned char* buf, int* len, int frame);
	int TProtocol_211::EscapeBytesDecode(unsigned char* buf, int* len, int frame);
	int  TProtocol_211::packet_proc();

};




#endif
