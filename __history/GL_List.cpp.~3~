//---------------------------------------------------------------------------

#pragma hdrstop

#include "GL_List.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)

template <typename T>
TGLList<T>::TGLList()
{

}

template <typename T>
TGLList<T>::~TGLList()
{

}

template <typename T>
int TGLList<T>::add(T* obj)
{
	m_list.push_back(obj);
	return 0;
}

template <typename T>
T* TGLList<T>::find(WideString nm)
{
	T* obj = NULL;

	WideString name = nm;

	auto ff = [&name](const T* ob)
	{
		return ob->name == name;
	};

	typename std::list<T*>::iterator it;

	for (auto it : m_list)
	{
		 if (ff(it))
		 {
			   obj = it;
			   break;
		 }
	}

	return obj;

}
