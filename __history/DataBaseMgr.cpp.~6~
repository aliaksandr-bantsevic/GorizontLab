//---------------------------------------------------------------------------

#pragma hdrstop

#include "DataBaseMgr.h"
#include <windows.h>

//---------------------------------------------------------------------------
#pragma package(smart_init)


TDataBaseMgr::TDataBaseMgr()
{
   l_sql_db = NULL;
   is_open = false;
}

TDataBaseMgr::~TDataBaseMgr()
{
   sqlite3_close(l_sql_db);
}

int TDataBaseMgr::open_base(TCHAR* path)
{
   int res = -1;

   TCHAR pb[1024];

   wcscpy(pb, path);
   wcscat(pb, L"data_base.db");

   char cb [1024];

   for (int i = 0; i <wcslen(pb); i++)
   {
		cb[i] = (char)pb[i]; cb[i+1] = 0;
   }

   res = sqlite3_open(cb, &l_sql_db);

   if (res == SQLITE_OK) is_open = true;

   return res;
}

bool TDataBaseMgr::is_base_open(void)
{
   return is_open;
}

int TDataBaseMgr::save_sensor_data_s(TDateTime t, TGLSensor* sn)
{
	int res = 0;
	char* zErrMsg = 0;

	if (is_open)
	{
		String ssname("");
		ssname.printf(L" DATA_SENSOR_%d_%d_%d_S ", sn->plnum, sn->prnum, sn->num);

		String stime("");
		stime = FormatDateTime("YYYY-MM-DD HH:MM:SS.SSS", t); //ISO 8601.

		char sql[1024];

		String ssql("");

		/*ssql.printf(L"CREATE TABLE IF NOT EXISTS %s ("  \
					"ID INTEGER PRIMARY KEY AUTOINCREMENT," \
					"STIME          TEXT    NOT NULL," \
					"TIME           REAL," \
					"X              REAL," \
					"Y              REAL", sname); */

	   // Создаем строку SQL-запроса
		std::wstring sname = ssname;  // Пример имени таблицы
		std::wstring ssql = L"CREATE TABLE IF NOT EXISTS " + sname +
                       L" (ID INTEGER PRIMARY KEY AUTOINCREMENT, " +
                       L"STIME TEXT NOT NULL, " +
                       L"TIME REAL, " +
                       L"X REAL, " +
					   L"Y REAL);";

	   //sprintf(sql, "%S", ssql.c_str());

       std::wcstombs(sql, ssql.c_str(), 1024);

	   res = sqlite3_exec(l_sql_db, sql, NULL, 0, &zErrMsg);

	   return 0;
	}
	else
	{
		return -2;
    }
}
