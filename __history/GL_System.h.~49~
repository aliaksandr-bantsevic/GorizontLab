//---------------------------------------------------------------------------

#ifndef GL_SystemH
#define GL_SystemH
//---------------------------------------------------------------------------
#include <vcl.h>
#include "GL_List.h"

#include "SysConfMgr.h"

#include <vcl.h>
#include <Xml.XMLDoc.hpp>
#include <Xml.XMLIntf.hpp>
#include "utils.h"

#include "PortProcThread.h"

#include <list>

#include "DataBaseMgr.h"


class TGLPlace;
//---------------------------------------------------------------------------

#define OBJ_TYPE_NONE     0
#define OBJ_TYPE_SYST     1
#define OBJ_TYPE_PLCE     2
#define OBJ_TYPE_PORT     3
#define OBJ_TYPE_SNSR     4

extern WideString g_ws_msg;

class TGLSystem
{

public:

	TGLSystem();
	TGLSystem(TTreeView* t, TXMLDocument* xmlDoc);
	~TGLSystem();

public:

private:

	TGLPlace* pl;
	TSysConfMgr* SysConfMgr;
	std::list<TPortProcThread*> m_port_proc_thread_list;
	TListBox* list_console;
	TDataBaseMgr* DBMgr;

public:

	TGLList<TGLPlace> place_list;

public:

   	TTreeNode* node;

	TGLPlace* 	cur_pl;
	TGLPort* 	cur_pr;
	TGLSensor* 	cur_sn;

public:

	WideString name;
	WideString mark;

	TTreeView* tree;


public:

	TGLPlace* add_place(WideString nm);
	TTreeNode* get_node(void);
	void View(BYTE state);
	//TGLPlace* GetPlace(int n);
	TObject* GetBrowserElement(TTreeNode* nd, int* type);
	void ProcBrowser—lick(TTreeNode* nd, int* tp);
	TGLPort* add_port(WideString nm);
	TGLSensor* add_sensor(WideString nm);
	int SaveConf(void);
	int LoadConf(void);
	TGLSensor* GetCurSn(void);
	int ReDraw(void);
	int delete_sensor(void);
	int delete_port(void);
	int delete_place(void);
	TCHAR* GetConfPath(void);
	int CreateConf(TSaveDialog* dlg);
	int OpenConf(TOpenDialog* dlg);
	int Clear(void);
	int SaveConf(TSaveDialog* dlg);
	void run_engine_start ();
	void run_engine_suspend ();
	void run_engine_resume ();
	void set_console(TListBox* list);
	void console(WideString  obj, WideString  msg);
	int open_DB(void);
	int store_sensor_data(void);

};


#endif
